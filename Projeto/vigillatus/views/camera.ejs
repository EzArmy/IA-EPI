<%- include('./partials/header', { gestorInfo: gestorInfo, pageName: 'Cameras' }) %>

<body class="">

    <div class="grid grid-cols-5 lg:grid-cols-6 xl:grid-cols-7">

        <div id="loader"></div>

        <%- include('partials/menu.ejs', {gestorInfo:gestorInfo})%>
        <div class="col-start-3 col-span-4 grid grid-cols-4 lg:grid-cols-5 xl:grid-cols-6 border-2">
           <!-- Main cam -->
           <div class="col-span-3 lg:col-span-4 xl:col-span-5">
            
            <div id="webcam-container"></div>
            <div id="label-container"></div>

            <div id="error-message" class="flex items-center justify-center w-full h-full bg-black text-red-500 font-bold text-2xl"></div>

            <script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@latest/dist/tf.min.js"></script>
            <script src="https://cdn.jsdelivr.net/npm/@teachablemachine/image@latest/dist/teachablemachine-image.min.js"></script>
            <script type="text/javascript">
                const URL = "https://teachablemachine.withgoogle.com/models/HxnbSyOD1/";
                let model, webcam, labelContainer, maxPredictions;

                async function init() {
                    const modelURL = URL + "model.json";
                    const metadataURL = URL + "metadata.json";

                    try {
                        model = await tmImage.load(modelURL, metadataURL);
                        maxPredictions = model.getTotalClasses();

                        const flip = true;
                        webcam = new tmImage.Webcam(200, 200, flip);
                        await webcam.setup();
                        await webcam.play();
                        window.requestAnimationFrame(loop);

                        document.getElementById("webcam-container").appendChild(webcam.canvas);
                        labelContainer = document.getElementById("label-container");
                        for (let i = 0; i < maxPredictions; i++) {
                            labelContainer.appendChild(document.createElement("div"));
                        }
                    } catch (error) {
                        document.getElementById("error-message").innerText = "Nenhuma cÃ¢mera foi detectada";
                    }
                }

                async function loop() {
                    webcam.update();
                    await predict();
                    window.requestAnimationFrame(loop);
                }

                async function predict() {
                    const prediction = await model.predict(webcam.canvas);
                    for (let i = 0; i < maxPredictions; i++) {
                        const classPrediction =
                            prediction[i].className + ": " + prediction[i].probability.toFixed(2);
                        labelContainer.childNodes[i].innerHTML = classPrediction;
                    }
                }

                
                window.onload = init;
            </script>
            
           </div>

           <div class="col-span-1 px-2 py-1 gap-1 justify-around flex flex-col border-2">
                <div id="img1"></div>
                <div id="img2"></div>
                <div id="img3"></div>
                <div id="img4"></div>
                <div id="img5"></div>
           </div>
        </div>

</body>

</html>